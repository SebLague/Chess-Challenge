// See https://aka.ms/new-console-template for more information
using System;
using System.Collections.Generic;
class C { static void Main() { var b = new B(); b.P(); } class B { const int I = 1, N = 2, R = 3, Q = 4, K = 5; int[][] m = { new int[] { 0, 1, 2, 3, 4, 2, 1, 0 }, new int[] { 5, 5, 5, 5, 5, 5, 5, 5 }, new int[] { 0, 1, 2, 3, 4, 2, 1, 0 } }; int[] e = new int[] { 0, 1, -1, 1, 3, 3, 5, 9 }; int[][] x = { new int[] { 0, 1 }, new int[] { 0, -1 }, new int[] { 1, 0 }, new int[] { -1, 0 }, new int[] { 1, 1 }, new int[] { 1, -1 }, new int[] { -1, 1 }, new int[] { -1, -1 } }; int[,] b; bool w; int v(int x) { return x > 0 ? x : -x; } int S(int x, int y) { return x >= 0 && x < 8 && y >= 0 && y < 8 ? b[x, y] : 0; } bool M(int f, int t) { int f1 = f / 8, f2 = f % 8, t1 = t / 8, t2 = t % 8, p = w ? 1 : -1, a = b[f1, f2]; if ((a > 0) == w && b[t1, t2] == 0 && (v(t1 - f1) <= 1 && v(t2 - f2) <= 1 || a == N || a == I)) { if (a > 0 && a < 9 && v(t1 - f1) > 1) { return false; } int[,] c = (int[,])b.Clone(); b[f1, f2] = 0; b[t1, t2] = a; if (a == K && v(t2 - f2) == 2) { int r = t2 > f2 ? 7 : 0, c1 = (r + 1 + r + t2) / 2, c2 = (r + t2) / 2, b1 = b[r, f2]; b[r, f2] = 0; b[c1, f2] = R; b[c2, f2] = K; if (!Z()) { b = (int[,])c.Clone(); return false; } b[r, f2] = b1; b[c1, f2] = 0; } if (!Z()) { b = (int[,])c.Clone(); return false; } return true; } return false; } bool Z() { int k = 0; for (int i = 0; i < 64; i++) { if ((b[i / 8, i % 8] > 0) == w) { for (int j = 0; j < 8; j++) { int t = i + x[j][0] * m[0][b[i / 8, i % 8]] * e[b[i / 8, i % 8]]; while (S(t / 8, t % 8) == 0) { if (M(i, t)) { k++; } if (b[t / 8, t % 8] != 0 || b[i / 8, i % 8] == N || b[i / 8, i % 8] == I) { break; } t += x[j][0] * m[0][b[i / 8, i % 8]] * e[b[i / 8, i % 8]]; } t = i + x[j][1] * m[0][b[i / 8, i % 8]] * e[b[i / 8, i % 8]]; while (S(t / 8, t % 8) == 0) { if (M(i, t)) { k++; } if (b[t / 8, t % 8] != 0 || b[i / 8, i % 8] == N || b[i / 8, i % 8] == I) { break; } t += x[j][1] * m[0][b[i / 8, i % 8]] * e[b[i / 8, i % 8]]; } } } } return k == 0; } public void P() { b = new int[8, 8]; w = true; int f, t; while (true) { for (int k = 0; k < 8; k++) { for (int j = 0; j < 8; j++) { Console.Write(b[k, j] + " "); } Console.WriteLine(); } Console.Write("Enter move (from to): "); string[] i = Console.ReadLine().Split(' '); f = int.Parse(i[0]) * 8 + int.Parse(i[1]); t = int.Parse(i[2]) * 8 + int.Parse(i[3]); if (M(f, t)) { w = !w; } else { Console.WriteLine("Invalid move!"); } } } } }
